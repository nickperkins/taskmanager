name: Go CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Check formatting (go fmt)
        run: |
          fmt_out=$(go fmt ./...)
          if [ -n "$fmt_out" ]; then
            echo "The following files are not gofmt'd:" >&2
            echo "$fmt_out" >&2
            exit 1
          fi

      - name: Static analysis (go vet)
        run: go vet ./...

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: ~/go/bin/staticcheck ./...

      - name: Run tests
        run: go test -v ./...

      - name: Upload coverage report
        run: |
          go test -coverprofile=coverage.out ./...
          go tool cover -func=coverage.out
        if: always()


  docker_build:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.build.result == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t taskmanager:latest -t ghcr.io/${{ github.repository_owner }}/taskmanager:latest .

      - name: Run Trivy vulnerability scanner
        id: trivy
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: 'image'
          image-ref: 'taskmanager:latest'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
        continue-on-error: true

      - name: Push image to GitHub Container Registry
        if: steps.trivy.outcome == 'success'
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/taskmanager:latest

